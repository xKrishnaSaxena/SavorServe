generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  relationMode = "prisma"
}

model Restaurant {
  id              Int             @id @default(autoincrement())
  name            String
  rating          Float
  diningRatings   Int
  deliveryRating  Int
  deliveryReviews String
  cuisines        String[]
  location        String
  status          String
  timing          String
  safetyMeasures  String[]
  menu            Menu[]
  knownFor        String[]
  averageCost     String
  paymentMethods  String[]
  moreInfo        String[]
  images          RestaurantImage[]
  menuPhotos      MenuPhoto[]
  reviews         Review[]
}

model Menu {
  id           Int        @id @default(autoincrement())
  category     String
  dishes       Dish[]
  restaurantId Int        @map("restaurant_id")
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model Dish {
  id       Int    @id @default(autoincrement())
  name     String
  price    String
  menuId   Int
  menu     Menu   @relation(fields: [menuId], references: [id])
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  name         String?
  username     String     @unique
  password     String 
  address     String?
  userReviews  Int        @default(0)
  userFollowers Int       @default(0)
  reviews      Review[]
}

model Review {
  id           Int        @id @default(autoincrement())
  username     String
  userReviews  Int
  userFollowers Int
  rating       Float
  type         String
  time         DateTime
  content      String?
  restaurantId Int        @map("restaurant_id")
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  userId       Int        @map("user_id")
  user         User       @relation(fields: [userId], references: [id])
}

model RestaurantImage {
  id           Int        @id @default(autoincrement())
  url          String
  publicId     String
  restaurantId Int        @map("restaurant_id")
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model MenuPhoto {
  id           Int        @id @default(autoincrement())
  url          String
  publicId     String
  restaurantId Int        @map("restaurant_id")
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}
